{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","views/Home/components/MetricsSection/index.tsx","hooks/api.ts","views/Home/components/PurpleWordHeading.tsx","views/Home/components/SalesSection/index.tsx","views/Home/components/CakeDataRow.tsx","views/Home/components/WedgeSvgs.tsx","views/Home/index.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx"],"names":["Resolution","swapSectionData","headingText","bodyText","reverse","primaryButton","to","text","external","secondaryButton","images","path","attributes","src","alt","earnSectionData","cakeSectionData","StyledCard","styled","Card","theme","mediaQueries","md","rotation","IconWrapper","Box","IconCard","icon","background","borderColor","children","props","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join","minHeight","minWidth","width","flexDirection","justifyContent","mt","scale","color","mb","Stats","t","useTranslation","data","useState","setData","useEffect","a","fetch","response","json","responseData","console","error","fetchData","useGetStats","useTheme","tvlString","formatLocalisedCompactNumber","tvl","trades","users","UsersCardData","TradesCardData","StakedCardData","alignItems","textAlign","mr","colors","secondary","primary","failure","floatingAnim","x","y","keyframes","Wrapper","maxHeight","DummyImg","img","ImageWrapper","getImageUrl","base","imageSrc","resolution","getSrcSet","MD","LG","CompositeImage","srcSet","map","image","PurpleWordHeading","firstWord","style","SalesSection","headingTranslatedText","bodyTranslatedText","flex","ml","alignSelf","href","bold","fontSize","height","StyledColumn","Flex","noMobileBorder","inputSecondary","sm","Grid","div","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","tokens","cake","address","cakeSupply","mcap","usePriceCakeBusd","times","mcapString","toNumber","Balance","decimals","lineHeight","value","my","gt","marketCap","cakeEmissions","OuterWedgeWrapper","InnerWedgeWrapper","top","fill","WedgeTopLeft","viewBox","preserveAspectRatio","d","WedgeTopRight","Home","HomeSectionContainerStyles","margin","maxWidth","Page","PageSection","innerProps","isDark","index","hasCurvedDivider","MetricsSection","gradients","cardHeader","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","id","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","Container","lg","svgFill","concaveDivider","containerProps"],"mappings":"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","file":"static/js/9.0ac5c45e.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string) => {\r\n  return `${getImageUrl(base, imageSrc)} 512w, \r\n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \r\n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <DummyImg\r\n        src={getImageUrl(path, attributes[0].src)}\r\n        maxHeight={maxHeight}\r\n        srcSet={getSrcSet(path, attributes[0].src)}\r\n      />\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade anything. No registration, instant on DeFi.',\r\n  bodyText: 'Trade any token on Cronos Smart Chain in seconds, just by connecting your wallet.',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: '#',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'BNB', alt: '' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Earn passive income with crypto.',\r\n  bodyText: 'Cronopoly makes it easy to make your crypto work for you.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: '#',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: '' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'CRP makes our world Fantastic.',\r\n  bodyText:\r\n    'CRP token is at the heart of the Cronos ecosystem. Buy it, win it, farm it, spend it, stake it... heck, you can even vote with it!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0xE6444CCee2AB9dB962A7e918426118b3080926d2',\r\n    text: 'Buy CRP',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: '#',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n\r\n      { src: 'coin', alt: '' },\r\n\r\n    ],\r\n  },\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string\r\n}\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <CardBody>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n        {children}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\n\r\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\r\n  headingText,\r\n  bodyText,\r\n  highlightColor,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints()\r\n  const isSmallerScreen = isMobile || isTablet\r\n  const split = headingText.split(' ')\r\n  const lastWord = split.pop()\r\n  const remainingWords = split.slice(0, split.length).join(' ')\r\n\r\n  return (\r\n    <Flex\r\n      minHeight={[null, null, null, '168px']}\r\n      minWidth=\"232px\"\r\n      width=\"fit-content\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      mt={[null, null, null, '64px']}\r\n    >\r\n      {isSmallerScreen && remainingWords.length > 13 ? (\r\n        <Heading scale=\"lg\">{remainingWords}</Heading>\r\n      ) : (\r\n        <Heading scale=\"xl\">{remainingWords}</Heading>\r\n      )}\r\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\r\n        {lastWord}\r\n      </Heading>\r\n      <Text color=\"textSubtle\">{bodyText}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StatCardContent\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, ChartIcon, CommunityIcon, SwapIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport StatCardContent from './StatCardContent'\r\n\r\n// Values fetched from bitQuery effective 6/9/21\r\nconst txCount = 30841921\r\nconst addressCount = 2751624\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  const data = useGetStats()\r\n  const { theme } = useTheme()\r\n\r\n  const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      <Heading textAlign=\"center\" scale=\"xl\">\r\n        {t('CRONOPOLY')}\r\n      </Heading>\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"12px\">\r\n        {t('Trusted with billions.')}\r\n      </Heading>\r\n      <Text textAlign=\"center\" color=\"textSubtle\" mb=\"72px\">\r\n        {t('Your Own Dex on Cronos')}\r\n      </Text>\r\n     \r\n\r\n\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('users', { users })}\r\n            bodyText={t('in the last 30 days')}\r\n            highlightColor={theme.colors.secondary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('trades', { trades })}\r\n            bodyText={t('made in the last 30 days')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...StakedCardData}>\r\n          <StatCardContent\r\n            headingText={t('staked', { tvl: tvlString })}\r\n            bodyText={t('Total Value Locked')}\r\n            highlightColor={theme.colors.failure}\r\n          />\r\n        </IconCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import { useEffect, useState } from 'react'\r\n\r\n/* eslint-disable camelcase */\r\nexport interface DeBankTvlResponse {\r\n  id: string\r\n  chain: string\r\n  name: string\r\n  site_url: string\r\n  logo_url: string\r\n  has_supported_portfolio: boolean\r\n  tvl: number\r\n}\r\n\r\nexport const useGetStats = () => {\r\n  const [data, setData] = useState<DeBankTvlResponse | null>(null)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('https://openapi.debank.com/v1/protocol?id=bsc_pancakeswap')\r\n        const responseData: DeBankTvlResponse = await response.json()\r\n\r\n        setData(responseData)\r\n      } catch (error) {\r\n        console.error('Unable to fetch data:', error)\r\n      }\r\n    }\r\n\r\n    fetchData()\r\n  }, [setData])\r\n\r\n  return data\r\n}\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst PurpleWordHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  return (\r\n    <Heading scale=\"xl\" mb=\"24px\" {...props}>\r\n      <span style={{ color: theme.colors.secondary }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default PurpleWordHeading\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <PurpleWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Link mr=\"16px\" external={primaryButton.external} href={primaryButton.to}>\r\n              <Button>\r\n                <Text color=\"card\" bold fontSize=\"16px\">\r\n                  {t(primaryButton.text)}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n            <Link external={secondaryButton.external} href={secondaryButton.to}>\r\n              {t(secondaryButton.text)}\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport tokens from 'config/constants/tokens'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 15\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(tokens.cake.address))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n\r\n  return (\r\n    <Grid>\r\n      <Flex flexDirection=\"column\">\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Burned to date')}</Text>\r\n        {burnedBalance ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={burnedBalance} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn noMobileBorder>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const OuterWedgeWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  right: 0px;\r\n  top: 0px;\r\n`\r\n\r\nexport const InnerWedgeWrapper = styled.div<{ fill: string; top?: boolean; width?: string }>`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  ${({ top }) => (top ? 'top: 0px' : 'bottom: 0px')};\r\n\r\n  svg {\r\n    fill: ${({ fill }) => fill};\r\n    width: ${({ width }) => width || '100%'};\r\n    height: 100%;\r\n    max-height: 48px;\r\n  }\r\n`\r\n\r\nexport const WedgeTopLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 48C1139.02 46.1887 336.256 15.2453 0 0H1660V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeTopRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M-346 48C174.985 46.1887 977.744 15.2453 1314 0H-346V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M0 0C520.985 1.81132 1323.74 32.7547 1660 48H0V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 0C1139.02 1.81132 336.256 32.7547 0 48H1660V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n","import React from 'react'\r\n// eslint-disable-next-line\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { PageMeta } from 'components/Layout/Page'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\n\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      \r\n      <PageSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        background={\r\n          theme.isDark\r\n            ? 'linear-gradient(180deg, #09070C 22%, #272727 100%)'\r\n            : 'linear-gradient(180deg, #FFFFFF 22%, #49474c 100%)'\r\n        }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#272727' : '#49474c'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n      \r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n"],"sourceRoot":""}